/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  KToken,
  KTokenInterface,
} from "../../../contracts/ERC20mint.sol/KToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001c1d38038062001c1d8339818101604052810190620000379190620001b7565b6040518060400160405280600681526020017f4b546f6b656e00000000000000000000000000000000000000000000000000008152506040518060400160405280600281526020017f4b540000000000000000000000000000000000000000000000000000000000008152508160039081620000b4919062000459565b508060049081620000c6919062000459565b505050620000fd7f6085eb43217533a495a9225db9fa760316ef73199a2e4d8d23afeead2de1a9da60001b6200017460201b60201c565b620001317fef7adb26e7923f642029d276ba5b58f0ef90d11a3aa8b55e7d62ee362d94aa2860001b6200017460201b60201c565b620001657f665de532dcde8ce422797a35be1d569c719259cd63af88ea00e63e2d6831fd0f60001b6200017460201b60201c565b80608081815250505062000540565b50565b600080fd5b6000819050919050565b62000191816200017c565b81146200019d57600080fd5b50565b600081519050620001b18162000186565b92915050565b600060208284031215620001d057620001cf62000177565b5b6000620001e084828501620001a0565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200026b57607f821691505b60208210810362000281576200028062000223565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620002eb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002ac565b620002f78683620002ac565b95508019841693508086168417925050509392505050565b6000819050919050565b60006200033a620003346200032e846200017c565b6200030f565b6200017c565b9050919050565b6000819050919050565b620003568362000319565b6200036e620003658262000341565b848454620002b9565b825550505050565b600090565b6200038562000376565b620003928184846200034b565b505050565b5b81811015620003ba57620003ae6000826200037b565b60018101905062000398565b5050565b601f8211156200040957620003d38162000287565b620003de846200029c565b81016020851015620003ee578190505b62000406620003fd856200029c565b83018262000397565b50505b505050565b600082821c905092915050565b60006200042e600019846008026200040e565b1980831691505092915050565b60006200044983836200041b565b9150826002028217905092915050565b6200046482620001e9565b67ffffffffffffffff81111562000480576200047f620001f4565b5b6200048c825462000252565b62000499828285620003be565b600060209050601f831160018114620004d15760008415620004bc578287015190505b620004c885826200043b565b86555062000538565b601f198416620004e18662000287565b60005b828110156200050b57848901518255600182019150602085019450602081019050620004e4565b868310156200052b578489015162000527601f8916826200041b565b8355505b6001600288020188555050505b505050505050565b6080516116c16200055c60003960006104e101526116c16000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f19146101a357806370a08231146101bf57806395d89b41146101ef578063a457c2d71461020d578063a9059cbb1461023d578063dd62ed3e1461026d576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c161029d565b6040516100ce9190610ea0565b60405180910390f35b6100f160048036038101906100ec9190610f5b565b61032f565b6040516100fe9190610fb6565b60405180910390f35b61010f610352565b60405161011c9190610fe0565b60405180910390f35b61013f600480360381019061013a9190610ffb565b61035c565b60405161014c9190610fb6565b60405180910390f35b61015d61038b565b60405161016a919061106a565b60405180910390f35b61018d60048036038101906101889190610f5b565b610394565b60405161019a9190610fb6565b60405180910390f35b6101bd60048036038101906101b89190610f5b565b6103cb565b005b6101d960048036038101906101d49190611085565b6105df565b6040516101e69190610fe0565b60405180910390f35b6101f7610627565b6040516102049190610ea0565b60405180910390f35b61022760048036038101906102229190610f5b565b6106b9565b6040516102349190610fb6565b60405180910390f35b61025760048036038101906102529190610f5b565b610730565b6040516102649190610fb6565b60405180910390f35b610287600480360381019061028291906110b2565b610753565b6040516102949190610fe0565b60405180910390f35b6060600380546102ac90611121565b80601f01602080910402602001604051908101604052809291908181526020018280546102d890611121565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b60008061033a6107da565b90506103478185856107e2565b600191505092915050565b6000600254905090565b6000806103676107da565b90506103748582856109ab565b61037f858585610a37565b60019150509392505050565b60006012905090565b60008061039f6107da565b90506103c08185856103b18589610753565b6103bb9190611181565b6107e2565b600191505092915050565b6103f77f8969a68cf08017fb79a6c461f1b8f01cb31ce00aeae8cc81f7ca94029e61008960001b610cad565b6104237f950999f28e5e4fd0abdc1b5f62e0a46079cb764d96955b688c3f1521f2aa5d5560001b610cad565b61044f7f051ca72841567811007492bc7b49bc907b303cd111c4735dc6a830318de1aed660001b610cad565b6000610459610352565b90506104877fa2f35890cb07b73ee6039e61eb45af6fcf5a865d748c42bda2fed21b2bc664b560001b610cad565b6104b37f45a281011a45009b9a30e9b18a10f8478f2a58d0a7b2b8cc2941b6aa410cf21760001b610cad565b6104df7ff465039051595390b70b37f6bfe15f10eb1cb452c877f82f9d623d2572437e5760001b610cad565b7f0000000000000000000000000000000000000000000000000000000000000000828261050c9190611181565b1061054c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054390611227565b60405180910390fd5b6105787fe08c925f74c2e5d585a684a72b637c4ce1367061534edb9fc9012c363d2faf7360001b610cad565b6105a47fcf8fd2827e31fece1f56cddf1002e347bf02d9f9ceaca889dce6d1177656ee8b60001b610cad565b6105d07fa2e793e77189029437152807238233a36c7abc05037413fcf2c64f08cea3934960001b610cad565b6105da8383610cb0565b505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461063690611121565b80601f016020809104026020016040519081016040528092919081815260200182805461066290611121565b80156106af5780601f10610684576101008083540402835291602001916106af565b820191906000526020600020905b81548152906001019060200180831161069257829003601f168201915b5050505050905090565b6000806106c46107da565b905060006106d28286610753565b905083811015610717576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070e906112b9565b60405180910390fd5b61072482868684036107e2565b60019250505092915050565b60008061073b6107da565b9050610748818585610a37565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610851576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108489061134b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b7906113dd565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161099e9190610fe0565b60405180910390a3505050565b60006109b78484610753565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a315781811015610a23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1a90611449565b60405180910390fd5b610a3084848484036107e2565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610aa6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9d906114db565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0c9061156d565b60405180910390fd5b610b20838383610e06565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ba6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9d906115ff565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c949190610fe0565b60405180910390a3610ca7848484610e0b565b50505050565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d169061166b565b60405180910390fd5b610d2b60008383610e06565b8060026000828254610d3d9190611181565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610dee9190610fe0565b60405180910390a3610e0260008383610e0b565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e4a578082015181840152602081019050610e2f565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e7282610e10565b610e7c8185610e1b565b9350610e8c818560208601610e2c565b610e9581610e56565b840191505092915050565b60006020820190508181036000830152610eba8184610e67565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ef282610ec7565b9050919050565b610f0281610ee7565b8114610f0d57600080fd5b50565b600081359050610f1f81610ef9565b92915050565b6000819050919050565b610f3881610f25565b8114610f4357600080fd5b50565b600081359050610f5581610f2f565b92915050565b60008060408385031215610f7257610f71610ec2565b5b6000610f8085828601610f10565b9250506020610f9185828601610f46565b9150509250929050565b60008115159050919050565b610fb081610f9b565b82525050565b6000602082019050610fcb6000830184610fa7565b92915050565b610fda81610f25565b82525050565b6000602082019050610ff56000830184610fd1565b92915050565b60008060006060848603121561101457611013610ec2565b5b600061102286828701610f10565b935050602061103386828701610f10565b925050604061104486828701610f46565b9150509250925092565b600060ff82169050919050565b6110648161104e565b82525050565b600060208201905061107f600083018461105b565b92915050565b60006020828403121561109b5761109a610ec2565b5b60006110a984828501610f10565b91505092915050565b600080604083850312156110c9576110c8610ec2565b5b60006110d785828601610f10565b92505060206110e885828601610f10565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061113957607f821691505b60208210810361114c5761114b6110f2565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061118c82610f25565b915061119783610f25565b92508282019050808211156111af576111ae611152565b5b92915050565b7f43697263756c61722073686f756c64206265206c657373207468616e206d617860008201527f20737570706c7900000000000000000000000000000000000000000000000000602082015250565b6000611211602783610e1b565b915061121c826111b5565b604082019050919050565b6000602082019050818103600083015261124081611204565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006112a3602583610e1b565b91506112ae82611247565b604082019050919050565b600060208201905081810360008301526112d281611296565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611335602483610e1b565b9150611340826112d9565b604082019050919050565b6000602082019050818103600083015261136481611328565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006113c7602283610e1b565b91506113d28261136b565b604082019050919050565b600060208201905081810360008301526113f6816113ba565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611433601d83610e1b565b915061143e826113fd565b602082019050919050565b6000602082019050818103600083015261146281611426565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006114c5602583610e1b565b91506114d082611469565b604082019050919050565b600060208201905081810360008301526114f4816114b8565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611557602383610e1b565b9150611562826114fb565b604082019050919050565b600060208201905081810360008301526115868161154a565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006115e9602683610e1b565b91506115f48261158d565b604082019050919050565b60006020820190508181036000830152611618816115dc565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611655601f83610e1b565b91506116608261161f565b602082019050919050565b6000602082019050818103600083015261168481611648565b905091905056fea2646970667358221220045ef5e0888c97aaea6a14e6e68e9b4b4e72f726267127dba09e8d43c877b60a64736f6c63430008110033";

type KTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KToken__factory extends ContractFactory {
  constructor(...args: KTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _maxSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KToken> {
    return super.deploy(_maxSupply, overrides || {}) as Promise<KToken>;
  }
  override getDeployTransaction(
    _maxSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_maxSupply, overrides || {});
  }
  override attach(address: string): KToken {
    return super.attach(address) as KToken;
  }
  override connect(signer: Signer): KToken__factory {
    return super.connect(signer) as KToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KTokenInterface {
    return new utils.Interface(_abi) as KTokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): KToken {
    return new Contract(address, _abi, signerOrProvider) as KToken;
  }
}
