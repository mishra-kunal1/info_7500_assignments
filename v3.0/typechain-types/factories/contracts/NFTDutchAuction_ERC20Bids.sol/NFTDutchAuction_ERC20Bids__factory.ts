/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  NFTDutchAuction_ERC20Bids,
  NFTDutchAuction_ERC20BidsInterface,
} from "../../../contracts/NFTDutchAuction_ERC20Bids.sol/NFTDutchAuction_ERC20Bids";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20TokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_erc721TokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nftTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reservePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numBlocksAuctionOpen",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_offerPriceDecrement",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "auctionClosed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "auctionEnd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "auction_winner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_bidAmount",
        type: "uint256",
      },
    ],
    name: "bid",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "closeAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20TokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc721TokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "seller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620019d7380380620019d783398181016040528101906200003791906200086d565b6200006b7f95dfb2db43fa0d6b103af57169270042dfb05b3b79a0b9a003ad1b0a6b20647c60001b620007c560201b60201c565b6200009f7fcb7de03a57a9e8ecc32de068ab3c01a8957f7ab8d092eb5cfe678887ccde940860001b620007c560201b60201c565b620000d37f606375501aa5050e88312c22220aa5c0aa63855b04852e5452c3bd388984cc2660001b620007c560201b60201c565b85600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001487fc1a98a890e12dd5e35210415e8f511119b6730b57b1f09ff4b4193d8740ad1b760001b620007c560201b60201c565b6200017c7f8e112c9ca6ac476d98614c4c6ae73c76aac30f5314cc4bddd9aeff148455cc5e60001b620007c560201b60201c565b84600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001f17fbcb3958a39d8d77598d2d549a139aa78b723057aee8038d23625f03ebd370bf760001b620007c560201b60201c565b620002257ff375f81551ad912e6b2e643ee27cd151a2ad0931c2ba0d273d309f5b125b9fee60001b620007c560201b60201c565b83600981905550620002607fe205f5c31a6cd94909498aed468fa4c48b917f05a4c06a03f02640746c7f7d6560001b620007c560201b60201c565b620002947f7942e42799963c8723918bd964d59d22f7a3acca751047b109790cf53473f4d160001b620007c560201b60201c565b82600181905550620002cf7f17900d0e96d73f6935f350712dfa5e3297021c6e761f42a7378ebd6766e64cb460001b620007c560201b60201c565b620003037fc5ad408beedd0f7b59e1b92b856c932fbd0840ce2220f856c6bfd1834726e9cf60001b620007c560201b60201c565b816002819055506200033e7f890930e0f61593c5941f9a34d5a8505f72edebe51d81317e03ed58174018e4d060001b620007c560201b60201c565b620003727fca4d4e140512160bdd5e5ba074ee1100f6a3fb72446beb5a10029f0c4a60cf9560001b620007c560201b60201c565b80600381905550620003ad7f46a7db42e9d1ed44a32b795407ca8c9454cd3f4d7a82a63a831cae7f4796a48960001b620007c560201b60201c565b620003e17f624b59f6b5e643eb9c855aa05f7ec47bfe55e06f07e7d4f0924616f1bad30c9860001b620007c560201b60201c565b600354600254620003f3919062000938565b60015462000402919062000983565b6004819055506200043c7f7f729309b43291caea49865dc14469f602e4ada4324971ec388d44b5bb8f5d3560001b620007c560201b60201c565b620004707f44aa3835d8345cb991f3e442bd3bf76ba38d221faf7a36a7e4da77909221259060001b620007c560201b60201c565b600454600a81905550620004ad7f7da175e955cee3bab83237b850867df32f133dd170faefdb83c7840c13760ead60001b620007c560201b60201c565b620004e17f4106462492232455bf0eac7335481c3192c2ad38a712c33c737cdc34e7c83afb60001b620007c560201b60201c565b60025443620004f1919062000983565b6007819055506200052b7f8f57877a8a38a2dc95f14d39c3d8512514ea292c3a9829d29affa45c6f27237760001b620007c560201b60201c565b6200055f7f3e49dad5ce85eedfa74e0823b9bc81c5166b8f9c43a8bc98d565382aa5d6e39360001b620007c560201b60201c565b6000600860006101000a81548160ff021916908315150217905550620005ae7f3fc9e21fdab4da10fecd16127ba99afc90e60fa3013bcb37acec1977bb362ed260001b620007c560201b60201c565b620005e27f7a28c890cd1374f396f8fe9a3d9a10cd77f85236dd7b76ca36337c9f5b622b1160001b620007c560201b60201c565b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620006577fdbe38138d48ebcaa0ed058670f1dd32eb490450879fb70c754b8843f06e3ed9e60001b620007c560201b60201c565b6200068b7f8e088cd115778854e801f93dc81bdd2d80b7af91c3ace4b7542f8cabc188af0660001b620007c560201b60201c565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620007227fe5062413448bf73844a60a7a3f87ec3e32abee91b4bec54f898380573152f83c60001b620007c560201b60201c565b620007567f0be91dbbf89517f628ab87dc699afa1a339a27e4f42e9aeaae0392817290590760001b620007c560201b60201c565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050620009be565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620007fa82620007cd565b9050919050565b6200080c81620007ed565b81146200081857600080fd5b50565b6000815190506200082c8162000801565b92915050565b6000819050919050565b620008478162000832565b81146200085357600080fd5b50565b60008151905062000867816200083c565b92915050565b60008060008060008060c087890312156200088d576200088c620007c8565b5b60006200089d89828a016200081b565b9650506020620008b089828a016200081b565b9550506040620008c389828a0162000856565b9450506060620008d689828a0162000856565b9350506080620008e989828a0162000856565b92505060a0620008fc89828a0162000856565b9150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620009458262000832565b9150620009528362000832565b9250828202620009628162000832565b915082820484148315176200097c576200097b62000909565b5b5092915050565b6000620009908262000832565b91506200099d8362000832565b9250828201905080821115620009b857620009b762000909565b5b92915050565b61100980620009ce6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063454a2ab311610066578063454a2ab3146101255780639d1b464a14610155578063aeaaa29914610173578063df241cb914610191578063f835cd3c146101af5761009e565b806308551a53146100a35780631d0806ae146100c15780632a24f46c146100df578063378252f2146100fd5780633dfe1df914610107575b600080fd5b6100ab6101cd565b6040516100b89190610c07565b60405180910390f35b6100c96101f3565b6040516100d69190610c3b565b60405180910390f35b6100e76101f9565b6040516100f49190610c3b565b60405180910390f35b6101056101ff565b005b61010f6103e0565b60405161011c9190610c07565b60405180910390f35b61013f600480360381019061013a9190610c87565b610406565b60405161014c9190610c07565b60405180910390f35b61015d610b5e565b60405161016a9190610c3b565b60405180910390f35b61017b610b64565b6040516101889190610ccf565b60405180910390f35b610199610b77565b6040516101a69190610c07565b60405180910390f35b6101b7610b9d565b6040516101c49190610c07565b60405180910390f35b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b60075481565b61022b7f802ba435cfb933c7c5a1334d67f0cb4630c9b87c93740bc8bd342ad3134a873260001b610bc3565b6102577f0a02cbd94aedcead9b08c89a6af0b518862953bdc77442e13297ed4b92c16c5460001b610bc3565b6102837fff337d46f83bdf7dbc816c8e64f3bd4c80e1d32e19ebb5926b258854b854904a60001b610bc3565b6102af7f260673207395e7f267d500788c416e6041d13dd241d6f7077520afba45d4423860001b610bc3565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461033f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033690610d6d565b60405180910390fd5b61036b7fd15c78ec1a98e448d3fa1e19ebf4e3d02ed35cdbe81a8a166ce60d823592ffe560001b610bc3565b6103977f7a5a774ea602e22635484f8e5f64d37e5117595e6415869c4cfd37b749b9ead360001b610bc3565b6103c37fa7ca71baffb04492217238ab8d7d597343f83a3221c3cc97ca12aef6002faf6e60001b610bc3565b6001600860006101000a81548160ff021916908315150217905550565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006104347f3e84a2edd865b722c643941fc8e0ca97f9c11bec3f46b91db3854b91b391fef260001b610bc3565b6104607f5287ce0c362c0fa76fcfddf85fd3e636bff61a5d1d374ac6fff61ca36ad5e6a860001b610bc3565b61048c7f54817033a6d77df49c2063b46bd7a52c9403ba3ef80ba164a19397c912bc0f2b60001b610bc3565b6104b87f2a23e46e5faad7b6a97a0a023289c0fe6acbdad00dea29b40d09a32d4e56ee9060001b610bc3565b6007544311156104fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f490610dff565b60405180910390fd5b6105297f6d0c38ad761b18da4b0918ef70028b185257addfbe4780135e39ff6ade3f89ee60001b610bc3565b6105557f72eb9341ff27049438ac862ef11a4667e6e98c4b312c84a3d8e06e2faf49d93c60001b610bc3565b6105817fbcf9187f587595d8c9d7dfe94bb25bf3c96b9ea565461b7dde7a6e6068590f8160001b610bc3565b6105ad7f0d783e7e846cd81c6ffbfa126d20aa6c817f2db12228ed4d3d1703ec4bc4889360001b610bc3565b6001548210156105f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e990610e91565b60405180910390fd5b61061e7f3055232c274f4e412c197bc745939db33caab384cae17a6db0a5be75807ef12860001b610bc3565b61064a7f73db2c90c077eb67b7ad28312392de99bfa8e8ded9384b8b6f27effc4738593460001b610bc3565b6106767f9f35e44c9045f1274a993d7634da8098352d4e5514666c8b49ffd72958279a7460001b610bc3565b6106a27fe032e31b9f9c616092c9b8e8375fc0373f02bf609c7aa2229e0ad29cb7a81fbb60001b610bc3565b60001515600860009054906101000a900460ff161515146106f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ef90610f23565b60405180910390fd5b6107247fad73dc083c56be2a97be06404e8516cc133cb1813f8735f322280f4dc85a661860001b610bc3565b6107507f6a49ce08c71d9f182e07903b6bff8221bf5e29d4378104071bc90298ee73e10960001b610bc3565b61077c7fd48049cc7bc5a51ca560f129b0ae05e51e06126b8b0a7935f113a6be4bde4b4660001b610bc3565b33600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506107e97f3c1a452a61b713c0b0acbfe07afe458de91bb5873b340fcaa44c3762df154b1360001b610bc3565b6108157f5ea9bb179406e8d4510b43f971f0cee0a1aea00832ce083ff8681d01bd68b74b60001b610bc3565b60006004819055506108497fa7813b97df543add28fa0360dd455a7d8aff0a1d258bcb8da788407fbb624da360001b610bc3565b6108757f3aaf7486c23180509621a3f0e385551e03bffbcc1374d999bf318b277fa8824160001b610bc3565b6001600860006101000a81548160ff0219169083151502179055506108bc7f936dc4466890711baff7dae238041f3e8ae86d2ba686ff4d1a2d80989f0366b360001b610bc3565b6108e87f900d01db43f75a1aae505391f8b05cdc18ffbccdb38a56ab65f1c337ade33f4a60001b610bc3565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518463ffffffff1660e01b815260040161096993929190610f43565b6020604051808303816000875af1158015610988573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ac9190610fa6565b506109d97ffc80ade398ae4a02d15d64d20a9ac8a0875c985e5684b775973982340300796c60001b610bc3565b610a057f5e12437c753a0cae40cf9bbc0f91e77064410fafc291a58fa8b8d6a65d0dabc060001b610bc3565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166009546040518463ffffffff1660e01b8152600401610aaa93929190610f43565b600060405180830381600087803b158015610ac457600080fd5b505af1158015610ad8573d6000803e3d6000fd5b50505050610b087fc3d20c0a542d55b8fd5462c216f6c6bee01be4c897a350973f319ca25687342360001b610bc3565b610b347fa22e5b90e76d079fea643fc4e6cf54fcf175c81d52c3f2f92e142510b1510b1360001b610bc3565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600a5481565b600860009054906101000a900460ff1681565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b50565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bf182610bc6565b9050919050565b610c0181610be6565b82525050565b6000602082019050610c1c6000830184610bf8565b92915050565b6000819050919050565b610c3581610c22565b82525050565b6000602082019050610c506000830184610c2c565b92915050565b600080fd5b610c6481610c22565b8114610c6f57600080fd5b50565b600081359050610c8181610c5b565b92915050565b600060208284031215610c9d57610c9c610c56565b5b6000610cab84828501610c72565b91505092915050565b60008115159050919050565b610cc981610cb4565b82525050565b6000602082019050610ce46000830184610cc0565b92915050565b600082825260208201905092915050565b7f4f6e6c79207468652073656c6c65722063616e20636c6f73652074686520617560008201527f6374696f6e000000000000000000000000000000000000000000000000000000602082015250565b6000610d57602583610cea565b9150610d6282610cfb565b604082019050919050565b60006020820190508181036000830152610d8681610d4a565b9050919050565b7f41756374696f6e2068617320616c726561647920656e6465642e204e6f206d6f60008201527f7265206269647300000000000000000000000000000000000000000000000000602082015250565b6000610de9602783610cea565b9150610df482610d8d565b604082019050919050565b60006020820190508181036000830152610e1881610ddc565b9050919050565b7f4269642076616c7565206973206c657373207468616e2063757272656e74207060008201527f726963652e000000000000000000000000000000000000000000000000000000602082015250565b6000610e7b602583610cea565b9150610e8682610e1f565b604082019050919050565b60006020820190508181036000830152610eaa81610e6e565b9050919050565b7f57696e6e657220686173206265656e2063686f73656e2e204e6f206d6f72652060008201527f62696464696e672e2041756374696f6e20636c6f736564000000000000000000602082015250565b6000610f0d603783610cea565b9150610f1882610eb1565b604082019050919050565b60006020820190508181036000830152610f3c81610f00565b9050919050565b6000606082019050610f586000830186610bf8565b610f656020830185610bf8565b610f726040830184610c2c565b949350505050565b610f8381610cb4565b8114610f8e57600080fd5b50565b600081519050610fa081610f7a565b92915050565b600060208284031215610fbc57610fbb610c56565b5b6000610fca84828501610f91565b9150509291505056fea26469706673582212207c34823d9ba04476db23941bc3d87cad47d97c3558fb3cf22acca4d8fdc79ce164736f6c63430008110033";

type NFTDutchAuction_ERC20BidsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTDutchAuction_ERC20BidsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTDutchAuction_ERC20Bids__factory extends ContractFactory {
  constructor(...args: NFTDutchAuction_ERC20BidsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _erc20TokenAddress: PromiseOrValue<string>,
    _erc721TokenAddress: PromiseOrValue<string>,
    _nftTokenId: PromiseOrValue<BigNumberish>,
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTDutchAuction_ERC20Bids> {
    return super.deploy(
      _erc20TokenAddress,
      _erc721TokenAddress,
      _nftTokenId,
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    ) as Promise<NFTDutchAuction_ERC20Bids>;
  }
  override getDeployTransaction(
    _erc20TokenAddress: PromiseOrValue<string>,
    _erc721TokenAddress: PromiseOrValue<string>,
    _nftTokenId: PromiseOrValue<BigNumberish>,
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _erc20TokenAddress,
      _erc721TokenAddress,
      _nftTokenId,
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    );
  }
  override attach(address: string): NFTDutchAuction_ERC20Bids {
    return super.attach(address) as NFTDutchAuction_ERC20Bids;
  }
  override connect(signer: Signer): NFTDutchAuction_ERC20Bids__factory {
    return super.connect(signer) as NFTDutchAuction_ERC20Bids__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTDutchAuction_ERC20BidsInterface {
    return new utils.Interface(_abi) as NFTDutchAuction_ERC20BidsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTDutchAuction_ERC20Bids {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NFTDutchAuction_ERC20Bids;
  }
}
