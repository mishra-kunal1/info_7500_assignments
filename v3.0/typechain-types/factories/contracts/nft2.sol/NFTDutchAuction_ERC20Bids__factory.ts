/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  NFTDutchAuction_ERC20Bids,
  NFTDutchAuction_ERC20BidsInterface,
} from "../../../contracts/nft2.sol/NFTDutchAuction_ERC20Bids";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20TokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_erc721TokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nftTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reservePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numBlocksAuctionOpen",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_offerPriceDecrement",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "auctionClosed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "auctionEnd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "auction_winner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_bidAmount",
        type: "uint256",
      },
    ],
    name: "bid",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20TokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc721TokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "seller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000d8138038062000d818339818101604052810190620000379190620002ee565b85600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600981905550826001819055508160028190555080600381905550600354600254620000e79190620003b9565b600154620000f6919062000404565b600481905550600454600a819055506002544362000115919062000404565b6007819055506000600860006101000a81548160ff02191690831515021790555033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050506200043f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200027b826200024e565b9050919050565b6200028d816200026e565b81146200029957600080fd5b50565b600081519050620002ad8162000282565b92915050565b6000819050919050565b620002c881620002b3565b8114620002d457600080fd5b50565b600081519050620002e881620002bd565b92915050565b60008060008060008060c087890312156200030e576200030d62000249565b5b60006200031e89828a016200029c565b96505060206200033189828a016200029c565b95505060406200034489828a01620002d7565b94505060606200035789828a01620002d7565b93505060806200036a89828a01620002d7565b92505060a06200037d89828a01620002d7565b9150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620003c682620002b3565b9150620003d383620002b3565b9250828202620003e381620002b3565b91508282048414831517620003fd57620003fc6200038a565b5b5092915050565b60006200041182620002b3565b91506200041e83620002b3565b92508282019050808211156200043957620004386200038a565b5b92915050565b610932806200044f6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063454a2ab311610066578063454a2ab3146101105780639d1b464a14610140578063aeaaa2991461015e578063df241cb91461017c578063f835cd3c1461019a57610093565b806308551a53146100985780631d0806ae146100b65780632a24f46c146100d45780633dfe1df9146100f2575b600080fd5b6100a06101b8565b6040516100ad91906105c2565b60405180910390f35b6100be6101de565b6040516100cb91906105f6565b60405180910390f35b6100dc6101e4565b6040516100e991906105f6565b60405180910390f35b6100fa6101ea565b60405161010791906105c2565b60405180910390f35b61012a60048036038101906101259190610642565b610210565b60405161013791906105c2565b60405180910390f35b61014861051c565b60405161015591906105f6565b60405180910390f35b610166610522565b604051610173919061068a565b60405180910390f35b610184610535565b60405161019191906105c2565b60405180910390f35b6101a261055b565b6040516101af91906105c2565b60405180910390f35b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b60075481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600754431115610257576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024e90610728565b60405180910390fd5b60045482101561029c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610293906107ba565b60405180910390fd5b60001515600860009054906101000a900460ff161515146102f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e99061084c565b60405180910390fd5b33600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006004819055506001600860006101000a81548160ff021916908315150217905550600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518463ffffffff1660e01b81526004016103d79392919061086c565b6020604051808303816000875af11580156103f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041a91906108cf565b50600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166009546040518463ffffffff1660e01b81526004016104c09392919061086c565b600060405180830381600087803b1580156104da57600080fd5b505af11580156104ee573d6000803e3d6000fd5b50505050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600a5481565b600860009054906101000a900460ff1681565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105ac82610581565b9050919050565b6105bc816105a1565b82525050565b60006020820190506105d760008301846105b3565b92915050565b6000819050919050565b6105f0816105dd565b82525050565b600060208201905061060b60008301846105e7565b92915050565b600080fd5b61061f816105dd565b811461062a57600080fd5b50565b60008135905061063c81610616565b92915050565b60006020828403121561065857610657610611565b5b60006106668482850161062d565b91505092915050565b60008115159050919050565b6106848161066f565b82525050565b600060208201905061069f600083018461067b565b92915050565b600082825260208201905092915050565b7f41756374696f6e2068617320616c726561647920656e6465642e204e6f206d6f60008201527f7265206269647300000000000000000000000000000000000000000000000000602082015250565b60006107126027836106a5565b915061071d826106b6565b604082019050919050565b6000602082019050818103600083015261074181610705565b9050919050565b7f4269642076616c7565206973206c657373207468616e2063757272656e74207060008201527f726963652e000000000000000000000000000000000000000000000000000000602082015250565b60006107a46025836106a5565b91506107af82610748565b604082019050919050565b600060208201905081810360008301526107d381610797565b9050919050565b7f57696e6e657220686173206265656e2063686f73656e2e204e6f206d6f72652060008201527f62696464696e672e2041756374696f6e20636c6f736564000000000000000000602082015250565b60006108366037836106a5565b9150610841826107da565b604082019050919050565b6000602082019050818103600083015261086581610829565b9050919050565b600060608201905061088160008301866105b3565b61088e60208301856105b3565b61089b60408301846105e7565b949350505050565b6108ac8161066f565b81146108b757600080fd5b50565b6000815190506108c9816108a3565b92915050565b6000602082840312156108e5576108e4610611565b5b60006108f3848285016108ba565b9150509291505056fea2646970667358221220d61ef2a1d7ad0548421951ffa4943cc5bba791aa08fb651b2ec7b55f6a4a453364736f6c63430008110033";

type NFTDutchAuction_ERC20BidsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTDutchAuction_ERC20BidsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTDutchAuction_ERC20Bids__factory extends ContractFactory {
  constructor(...args: NFTDutchAuction_ERC20BidsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _erc20TokenAddress: PromiseOrValue<string>,
    _erc721TokenAddress: PromiseOrValue<string>,
    _nftTokenId: PromiseOrValue<BigNumberish>,
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTDutchAuction_ERC20Bids> {
    return super.deploy(
      _erc20TokenAddress,
      _erc721TokenAddress,
      _nftTokenId,
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    ) as Promise<NFTDutchAuction_ERC20Bids>;
  }
  override getDeployTransaction(
    _erc20TokenAddress: PromiseOrValue<string>,
    _erc721TokenAddress: PromiseOrValue<string>,
    _nftTokenId: PromiseOrValue<BigNumberish>,
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _erc20TokenAddress,
      _erc721TokenAddress,
      _nftTokenId,
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    );
  }
  override attach(address: string): NFTDutchAuction_ERC20Bids {
    return super.attach(address) as NFTDutchAuction_ERC20Bids;
  }
  override connect(signer: Signer): NFTDutchAuction_ERC20Bids__factory {
    return super.connect(signer) as NFTDutchAuction_ERC20Bids__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTDutchAuction_ERC20BidsInterface {
    return new utils.Interface(_abi) as NFTDutchAuction_ERC20BidsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTDutchAuction_ERC20Bids {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NFTDutchAuction_ERC20Bids;
  }
}
