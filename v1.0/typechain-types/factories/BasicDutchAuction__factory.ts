/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  BasicDutchAuction,
  BasicDutchAuctionInterface,
} from "../BasicDutchAuction";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_reservePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numBlocksAuctionOpen",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_offerPriceDecrement",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "auctionEndBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bid",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numBlocksAuctionOpen",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "offerPriceDecrement",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reservePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "seller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000c7d38038062000c7d833981810160405281019062000037919062000235565b62000053677ddf6620da4a658d60c01b620001f260201b60201c565b6200006f674106b766eba0138860c01b620001f260201b60201c565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000cb6737a272169e95264f60c01b620001f260201b60201c565b82600181905550620000ee67d776311ee5e7556f60c01b620001f260201b60201c565b8160028190555062000111677583306b4c11c0bf60c01b620001f260201b60201c565b8060038190555062000134673a15e15b5fbcd73760c01b620001f260201b60201c565b600354600254620001469190620002c0565b6001546200015591906200030b565b6004819055506200017767364ad5615da41ba460c01b620001f260201b60201c565b6004546005819055506200019c6749023f8ea564ac9c60c01b620001f260201b60201c565b60025443620001ac91906200030b565b600781905550620001ce67e354403a4e0e4ef960c01b620001f260201b60201c565b6000600860006101000a81548160ff02191690831515021790555050505062000346565b50565b600080fd5b6000819050919050565b6200020f81620001fa565b81146200021b57600080fd5b50565b6000815190506200022f8162000204565b92915050565b600080600060608486031215620002515762000250620001f5565b5b600062000261868287016200021e565b935050602062000274868287016200021e565b925050604062000287868287016200021e565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620002cd82620001fa565b9150620002da83620001fa565b9250828202620002ea81620001fa565b9150828204841483151762000304576200030362000291565b5b5092915050565b60006200031882620001fa565b91506200032583620001fa565b925082820190508082111562000340576200033f62000291565b5b92915050565b61092780620003566000396000f3fe6080604052600436106100865760003560e01c80633103ea62116100595780633103ea621461012a5780639d1b464a14610155578063d3642a8814610180578063db2e1eed146101ab578063dfbf53ae146101d657610086565b806307d52fa81461008b57806308551a53146100b65780631998aeef146100e15780631d0806ae146100ff575b600080fd5b34801561009757600080fd5b506100a0610201565b6040516100ad9190610634565b60405180910390f35b3480156100c257600080fd5b506100cb610207565b6040516100d89190610690565b60405180910390f35b6100e961022b565b6040516100f69190610690565b60405180910390f35b34801561010b57600080fd5b506101146105d4565b6040516101219190610634565b60405180910390f35b34801561013657600080fd5b5061013f6105da565b60405161014c9190610634565b60405180910390f35b34801561016157600080fd5b5061016a6105e0565b6040516101779190610634565b60405180910390f35b34801561018c57600080fd5b506101956105e6565b6040516101a29190610634565b60405180910390f35b3480156101b757600080fd5b506101c06105ec565b6040516101cd9190610634565b60405180910390f35b3480156101e257600080fd5b506101eb6105f2565b6040516101f89190610690565b60405180910390f35b60075481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061024167a1680a6eebee9d9660c01b610618565b61025567bc83f7442736e23160c01b610618565b61026967efd7c71de1f5b62a60c01b610618565b61027d67e94a3551f1276eb960c01b610618565b6007544311156102c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b990610708565b60405180910390fd5b6102d6679cde1a08afa8c55d60c01b610618565b6102ea6783f1b32aac887d4160c01b610618565b6102fe673a275ae43e62792060c01b610618565b60006003546002546007546103139190610757565b4361031e9190610757565b610328919061078b565b6004546103359190610757565b905061034b6738435c59c67a01cf60c01b610618565b61035f67dfc87a732d4b411960c01b610618565b61037367640ed5da8579dc0b60c01b610618565b803410156103b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ad9061083f565b60405180910390fd5b6103ca673093b23ff6e3212c60c01b610618565b6103de67c5fc896fa251206760c01b610618565b6103f267533bdf3e75fc330360c01b610618565b610406670abd588accdd028e60c01b610618565b60001515600860009054906101000a900460ff1615151461045c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610453906108d1565b60405180910390fd5b61047067dccdf487ca72b53660c01b610618565b6104846729e5d2884ebc0f6d60c01b610618565b33600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104d967c6c7fc0156a199a660c01b610618565b6001600860006101000a81548160ff021916908315150217905550610508674d8ef6ee323dc74460c01b610618565b61051c6784a67d943060c75860c01b610618565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610582573d6000803e3d6000fd5b50610597673d60099a81dc441360c01b610618565b6105ab679940060e163abe1860c01b610618565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60045481565b60025481565b60055481565b60035481565b60015481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b50565b6000819050919050565b61062e8161061b565b82525050565b60006020820190506106496000830184610625565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061067a8261064f565b9050919050565b61068a8161066f565b82525050565b60006020820190506106a56000830184610681565b92915050565b600082825260208201905092915050565b7f41756374696f6e2068617320616c726561647920656e6465642e000000000000600082015250565b60006106f2601a836106ab565b91506106fd826106bc565b602082019050919050565b60006020820190508181036000830152610721816106e5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107628261061b565b915061076d8361061b565b925082820390508181111561078557610784610728565b5b92915050565b60006107968261061b565b91506107a18361061b565b92508282026107af8161061b565b915082820484148315176107c6576107c5610728565b5b5092915050565b7f4269642076616c7565206973206c6f776572207468616e207468652063616c6360008201527f756c617465642070726963652e00000000000000000000000000000000000000602082015250565b6000610829602d836106ab565b9150610834826107cd565b604082019050919050565b600060208201905081810360008301526108588161081c565b9050919050565b7f41756374696f6e2068617320616c726561647920636c6f73656420616e64207760008201527f696e6e657220686173206265656e2064657465726d696e65642e000000000000602082015250565b60006108bb603a836106ab565b91506108c68261085f565b604082019050919050565b600060208201905081810360008301526108ea816108ae565b905091905056fea26469706673582212202dc109e52e70cba08c24c862f598755f6fd93c3c0a7ce1d3e5bfdf7820af239e64736f6c63430008110033";

type BasicDutchAuctionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BasicDutchAuctionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BasicDutchAuction__factory extends ContractFactory {
  constructor(...args: BasicDutchAuctionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BasicDutchAuction> {
    return super.deploy(
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    ) as Promise<BasicDutchAuction>;
  }
  override getDeployTransaction(
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    );
  }
  override attach(address: string): BasicDutchAuction {
    return super.attach(address) as BasicDutchAuction;
  }
  override connect(signer: Signer): BasicDutchAuction__factory {
    return super.connect(signer) as BasicDutchAuction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BasicDutchAuctionInterface {
    return new utils.Interface(_abi) as BasicDutchAuctionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BasicDutchAuction {
    return new Contract(address, _abi, signerOrProvider) as BasicDutchAuction;
  }
}
