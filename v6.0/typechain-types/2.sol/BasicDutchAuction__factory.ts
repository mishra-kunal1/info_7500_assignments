/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BasicDutchAuction,
  BasicDutchAuctionInterface,
} from "../../../../2.sol/BasicDutchAuction";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_reservePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numBlocksAuctionOpen",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_offerPriceDecrement",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "auctionEndBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "auction_open",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bid",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_current_price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numBlocksAuctionOpen",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "offerPriceDecrement",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reservePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "seller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000ad638038062000ad6833981810160405281019062000037919062000136565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260018190555081600281905550806003819055506003546002546200009e9190620001c1565b600154620000ad91906200020c565b60048190555060045460058190555060025443620000cc91906200020c565b6007819055506000600860006101000a81548160ff02191690831515021790555050505062000247565b600080fd5b6000819050919050565b6200011081620000fb565b81146200011c57600080fd5b50565b600081519050620001308162000105565b92915050565b600080600060608486031215620001525762000151620000f6565b5b600062000162868287016200011f565b935050602062000175868287016200011f565b925050604062000188868287016200011f565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620001ce82620000fb565b9150620001db83620000fb565b9250828202620001eb81620000fb565b9150828204841483151762000205576200020462000192565b5b5092915050565b60006200021982620000fb565b91506200022683620000fb565b925082820190508082111562000241576200024062000192565b5b92915050565b61087f80620002576000396000f3fe60806040526004361061009c5760003560e01c80633103ea62116100645780633103ea621461016b578063676a38d7146101965780639d1b464a146101c1578063d3642a88146101ec578063db2e1eed14610217578063dfbf53ae146102425761009c565b806307d52fa8146100a157806308551a53146100cc5780631998aeef146100f75780631d0806ae146101155780632c3d4c8914610140575b600080fd5b3480156100ad57600080fd5b506100b661026d565b6040516100c39190610556565b60405180910390f35b3480156100d857600080fd5b506100e1610273565b6040516100ee91906105b2565b60405180910390f35b6100ff610297565b60405161010c91906105b2565b60405180910390f35b34801561012157600080fd5b5061012a61049c565b6040516101379190610556565b60405180910390f35b34801561014c57600080fd5b506101556104a2565b60405161016291906105e8565b60405180910390f35b34801561017757600080fd5b506101806104be565b60405161018d9190610556565b60405180910390f35b3480156101a257600080fd5b506101ab6104c4565b6040516101b89190610556565b60405180910390f35b3480156101cd57600080fd5b506101d6610505565b6040516101e39190610556565b60405180910390f35b3480156101f857600080fd5b5061020161050b565b60405161020e9190610556565b60405180910390f35b34801561022357600080fd5b5061022c610511565b6040516102399190610556565b60405180910390f35b34801561024e57600080fd5b50610257610517565b60405161026491906105b2565b60405180910390f35b60075481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006007544311156102de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d590610660565b60405180910390fd5b60006003546002546007546102f391906106af565b436102fe91906106af565b61030891906106e3565b60045461031591906106af565b90508034101561035a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035190610797565b60405180910390fd5b60001515600860009054906101000a900460ff161515146103b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a790610829565b60405180910390fd5b33600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600860006101000a81548160ff02191690831515021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610472573d6000803e3d6000fd5b50600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60045481565b600060075443116104b657600190506104bb565b600090505b90565b60025481565b6000806003546002546007546104da91906106af565b436104e591906106af565b6104ef91906106e3565b6004546104fc91906106af565b90508091505090565b60055481565b60035481565b60015481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000819050919050565b6105508161053d565b82525050565b600060208201905061056b6000830184610547565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061059c82610571565b9050919050565b6105ac81610591565b82525050565b60006020820190506105c760008301846105a3565b92915050565b60008115159050919050565b6105e2816105cd565b82525050565b60006020820190506105fd60008301846105d9565b92915050565b600082825260208201905092915050565b7f41756374696f6e2068617320616c726561647920656e6465642e000000000000600082015250565b600061064a601a83610603565b915061065582610614565b602082019050919050565b600060208201905081810360008301526106798161063d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106ba8261053d565b91506106c58361053d565b92508282039050818111156106dd576106dc610680565b5b92915050565b60006106ee8261053d565b91506106f98361053d565b92508282026107078161053d565b9150828204841483151761071e5761071d610680565b5b5092915050565b7f4269642076616c7565206973206c6f776572207468616e207468652063616c6360008201527f756c617465642070726963652e00000000000000000000000000000000000000602082015250565b6000610781602d83610603565b915061078c82610725565b604082019050919050565b600060208201905081810360008301526107b081610774565b9050919050565b7f41756374696f6e2068617320616c726561647920636c6f73656420616e64207760008201527f696e6e657220686173206265656e2064657465726d696e65642e000000000000602082015250565b6000610813603a83610603565b915061081e826107b7565b604082019050919050565b6000602082019050818103600083015261084281610806565b905091905056fea2646970667358221220f284865005b8ed85ce59d3e3ac33cd7fc70adfe68a34465efa0140f71aa1db7664736f6c63430008120033";

type BasicDutchAuctionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BasicDutchAuctionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BasicDutchAuction__factory extends ContractFactory {
  constructor(...args: BasicDutchAuctionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BasicDutchAuction> {
    return super.deploy(
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    ) as Promise<BasicDutchAuction>;
  }
  override getDeployTransaction(
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    );
  }
  override attach(address: string): BasicDutchAuction {
    return super.attach(address) as BasicDutchAuction;
  }
  override connect(signer: Signer): BasicDutchAuction__factory {
    return super.connect(signer) as BasicDutchAuction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BasicDutchAuctionInterface {
    return new utils.Interface(_abi) as BasicDutchAuctionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BasicDutchAuction {
    return new Contract(address, _abi, signerOrProvider) as BasicDutchAuction;
  }
}
